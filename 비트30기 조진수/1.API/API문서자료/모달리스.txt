//소스.cpp 모달리스
#include <windows.h>
#include <tchar.h>
#include "resource.h"

typedef struct tagDATA 
{
   TCHAR str[20];
   int num;
}DATA;

//=====================================
HWND g_hDlg;
#define WM_APPLY   WM_USER + 100
//===================================

BOOL CALLBACK DlgProc(HWND hDlg, UINT msg, WPARAM wParam, LPARAM lParam)
{
   static DATA* pData;

   switch (msg)
   {
      //dialog가 처음 나타날때 발생. 각 컨트롤을 초기화 한다.
   case WM_INITDIALOG:
       {
      pData = (DATA*)lParam;
      SetDlgItemText(hDlg, IDC_EDIT1, pData->str);
      SetDlgItemInt(hDlg, IDC_EDIT2, pData->num, 0);
      HWND h = GetDlgItem(hDlg, IDOK);
      SetWindowText(h, TEXT("적용"));
        }
          break;
 
   case WM_COMMAND:
   {
      switch (LOWORD(wParam))
      {
      case IDOK:
         GetDlgItemText(hDlg, IDC_EDIT1, pData->str, sizeof(pData->str));
         pData->num = GetDlgItemInt(hDlg, IDC_EDIT2, 0, 0);
         SendMessage(GetParent(g_hDlg), WM_APPLY, 0, 0);
         return TRUE;

      case IDCANCEL:

         EndDialog(hDlg, IDCANCEL);
         return TRUE;
      }

   }
   }
   return FALSE;
   
}


   LRESULT OnCreate(HWND hwnd, WPARAM wParam, LPARAM)
   {
      return 0;
   }

   LRESULT OnDestroy(HWND hwnd, WPARAM wParam, LPARAM)
   {
      PostQuitMessage(0);
      return 0; 
   }

   LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
   {
      static DATA data = { TEXT("홍길동"),20 };
      switch (msg) 
      {
      case WM_CREATE:              return OnCreate(hwnd, wParam, lParam);
      case WM_DESTROY:             return OnDestroy(hwnd, wParam, lParam);
      case WM_INITDIALOG:           return DlgProc(hwnd, msg, wParam, lParam);
      case WM_APPLY:
          {
         TCHAR buf[128];
         wsprintf(buf, TEXT("%s/%d"), data.str, data.num);
         SetWindowText(hwnd, buf);

           }
      return 0;


      case WM_LBUTTONDOWN:
      {
         if (g_hDlg == 0)
         {
            //모달리스 만들기
            g_hDlg = CreateDialogParam(GetModuleHandle(0),
               MAKEINTRESOURCE(IDD_DIALOG1), 
               hwnd, 
               DlgProc,
               (LPARAM)& data);
            ShowWindow(g_hDlg, SW_SHOW);
         }
         else
         {
            SetFocus(g_hDlg);        //이미 만들어진 경우 focus 이동
         }
      }


      return 0;
      }
      return DefWindowProc(hwnd, msg, wParam, lParam);
   }
      

      
int WINAPI _tWinMain(HINSTANCE hInst, HINSTANCE hPrev, LPTSTR lpCmdLine, int nShowCmd)
{
   //윈도우 클래스 생성
   WNDCLASS wc;
   wc.cbWndExtra = 0;
   wc.cbClsExtra = 0;
   wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
   wc.hCursor = LoadCursor(0, IDC_ARROW);
   wc.hIcon = LoadIcon(0, IDI_APPLICATION);
   wc.hInstance = hInst;
   wc.lpfnWndProc = WndProc;
   wc.lpszClassName = TEXT("First");
   wc.lpszMenuName = 0;
   wc.style = 0;

   //레지스트리 등록
   RegisterClass(&wc);

   //윈도우 창 생성
   HWND hwnd = CreateWindowEx(0,
      TEXT("first"),
      TEXT("Hello"),
      WS_OVERLAPPEDWINDOW,
      CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, 0, 0, hInst, 0);

   //윈도우 화면 출력
   ShowWindow(hwnd, SW_SHOW);
   UpdateWindow(hwnd);

   //메세지
   MSG msg;
   while (GetMessage(&msg, 0, 0, 0))
   {
      TranslateMessage(&msg);
      DispatchMessage(&msg);
   }


   return 0;
}