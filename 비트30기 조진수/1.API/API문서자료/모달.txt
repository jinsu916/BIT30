//skeleton code 모달
#include <Windows.h>
#include <tchar.h>
#include "resource.h"


typedef struct tagDATA {
   TCHAR str[20];
   int num;
}DATA;


//LRESULT OnCommand(HWND hDlg, WPARAM wParam, LPARAM lParam, DATA *pData)
/*{
   switch (LOWORD(wParam))
   {
   case IDOK: {
            GetDlgItemText(hDlg, IDC_EDIT1, pData->str, sizeof(pData->str));
            pData->num = GetDlgItemInt(hDlg, IDC_EDIT2, 0, 0);
            EndDialog(hDlg, IDOK);
            return TRUE;

         }
   case IDCANCEL: {
            EndDialog(hDlg, IDCANCEL);
            return TRUE;

            }
   }
   return FALSE;
}
*/

BOOL CALLBACK DlgProc(HWND hDlg, UINT msg, WPARAM wParam, LPARAM lParam)
{
   static DATA* pData;
   switch (msg)
   {
   case WM_INITDIALOG: {pData = (DATA*)lParam;
      SetDlgItemText(hDlg, IDC_EDIT1, pData->str);
      SetDlgItemInt(hDlg, IDC_EDIT2, pData->num, 0);
   }
                  break;
   case WM_COMMAND:
      switch (LOWORD(wParam))
      {
      case IDOK: {
         GetDlgItemText(hDlg, IDC_EDIT1, pData->str, sizeof(pData->str));
         pData->num = GetDlgItemInt(hDlg, IDC_EDIT2, 0, 0);
         EndDialog(hDlg, IDOK);
         return TRUE;
      }
      case IDCANCEL: {
         EndDialog(hDlg, IDCANCEL);
         return TRUE;
      }
      }
   }
   return FALSE;
}
LRESULT OnCreate(HWND hwnd, WPARAM wPama, LPARAM)
{
   return 0;
}
LRESULT OnDestroy(HWND hwnd, WPARAM wParam, LPARAM)
{
   PostQuitMessage(0);
   return 0;
}
LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
   switch (msg) {
   case WM_CREATE:            return OnCreate(hwnd, wParam, lParam);
   case WM_DESTROY:         return OnDestroy(hwnd, wParam, lParam);
   case WM_LBUTTONDOWN:
   {
      DATA data = { TEXT("홍길동"),20 };
      UINT ret = DialogBoxParam(GetModuleHandle(0), MAKEINTRESOURCE(IDD_DIALOG1), hwnd, DlgProc, (LPARAM)& data);
      if (ret == IDOK) {
         TCHAR buf[128];
         wsprintf(buf, TEXT("%s / %d"), data.str, data.num);
         SetWindowText(hwnd, buf);
      }
   }
   }
   return DefWindowProc(hwnd, msg, wParam, lParam);
}

/*LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
   switch (msg)
   {
     case WM_LBUTTONDOWN:
     {
       DATA data = { TEXT("홍길동"),20 };
       UINT ret = DialogBoxParam(GetModuleHandle(0), MAKEINTRESOURCE(IDD_DIALOG1), hwnd, DlgProc, (LPARAM)&data);
       if (ret == IDOK) {
         TCHAR buf[128];
         wsprintf(buf, TEXT("%s / %d"), data.str, data.num);
         SetWindowText(hwnd, buf);
       }
     }
     return 0;
   }
}*/

int WINAPI _tWinMain(HINSTANCE hInst, HINSTANCE hPrev, LPTSTR lpCmdLine, int nShowCmd)
{
   //1.윈도우 클래스 만들기
   WNDCLASS wc;
   wc.style = 0;
   wc.lpfnWndProc = WndProc;   //메시지 처리 함수
   wc.cbClsExtra = 0;   //예약(미리등록)
   wc.cbWndExtra = 0;   //예약(")
   wc.hInstance = hInst;   //자신의 인스턴스 등록
   wc.hIcon = LoadIcon(NULL, IDI_APPLICATION);//미리등록된
   wc.hCursor = LoadCursor(0, IDC_ARROW);   //미리등록된
   wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);//미리등록된
   wc.lpszMenuName = 0;
   wc.lpszClassName = TEXT("FIRST");//등록키
   //2.레지스트리 등록
   RegisterClass(&wc);
   //3.윈도우 창 만들기
   HWND hwnd = CreateWindowEx(0, //Ws_EX_TOPMOST
      TEXT("FIRST"),         //클래스 명
      TEXT("Hello"),         //캡션바 내용
      WS_OVERLAPPEDWINDOW,
      CW_USEDEFAULT, 0, CW_USEDEFAULT, 0,   //초기위치
      0, 0,                        //부모 윈도우 핸들, 메뉴 핸들
      hInst,                        //WinMain의 1번째 파라미터
      0);                           //생성인자
    //4.윈도우 보여주기
   ShowWindow(hwnd, SW_SHOW);
   UpdateWindow(hwnd);

   MSG msg;
   while (GetMessage(&msg, 0, 0, 0))
   {
      TranslateMessage(&msg);
      DispatchMessage(&msg);
   }
   return 0;
}